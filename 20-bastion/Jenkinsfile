pipeline {
    agent { label 'AGENT-1' }
    environment {
        PROJECT = 'EXPENSE'
        COMPONENT = 'BACKEND'
    }
    options { 
        disableConcurrentBuilds() 
        timeout(time: 30, unit: 'MINUTES')
        ansiColor('xterm')
    }
    parameters{
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Pick something')
    }
    stages {
        stage('Init') {
            steps {
                script{
                withAWS(region: 'us-east-1', credentials: 'aws-creds') { //creds need to set in jenkins
                    sh """
                        cd 20-bastion
                        terraform init -reconfigure
                        terraform plan
                    """
                }
                }
            }
        }
        stage('Apply') {
            steps {
                script{
                withAWS(region: 'us-east-1', credentials: 'aws-creds') { //creds need to set in jenkins
                    sh """
                        cd 20-bastion
                        terraform apply -auto-approve
                    """
                }
                }
            }
        }
    }
    post { 
        always { 
            echo 'I will always say Hello again!'
            deleteDir()
        }
        failure { 
            echo 'I will run when pipeline is failed.'
        }
        success { 
            echo 'Pipeline completed successfully.'
        }
    }
}

