pipeline {
    agent { label 'AGENT-1' }
    environment {
        PROJECT = 'EXPENSE'
        COMPONENT = 'BACKEND'
    }
    options { 
        disableConcurrentBuilds() 
        timeout(time: 30, unit: 'MINUTES')
        ansiColor('xterm')
    }
    parameters{
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Pick something')
    }
    stages {
        stage('Init') {
            steps {
                script{
                withAWS(region: 'us-east-1', credentials: 'aws-creds') { //creds need to set in jenkins
                    sh """
                        cd 70-ingress-alb
                        terraform init -reconfigure
                        terraform plan
                    """
                }
                }
            }
        }
        stage('Apply or Destroy') {
            steps {
                script{
                withAWS(region: 'us-east-1', credentials: 'aws-creds') { //creds need to set in jenkins
                    sh """
                        cd 70-ingress-alb
                        if [ ${params.ACTION} == 'apply' ]
                        then
                            terraform apply -auto-approve
                        else
                            terraform destroy -auto-approve
                        fi
                    """
                }
                }
            }
        }
        stage('Destroy Infra') {
            steps {
                script {
                    withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                        def list = [ "60-acm", "50-ecr", "40-eks", "30-rds", "20-bastion", "10-sg", "00-vpc"]
                        for(item in list){
                            sh """
                                cd $item
                                terraform init -reconfigure
                                terraform destroy -auto-approve
                            """
                        }
                    }
                }
            }
        }
    }
    post { 
        always { 
            echo 'I will always say Hello again!'
            deleteDir()
        }
        failure { 
            echo 'I will run when pipeline is failed.'
        }
        success { 
            echo 'Pipeline completed successfully.'
        }
    }
}

